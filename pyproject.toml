[build-system]
build-backend = "hatchling.build"
requires = [
  "hatch-vcs",
  "hatchling",
]

[project]
name = "tap-transifex"
description = "Singer tap for Transifex, built with the Meltano SDK for Singer Taps"
readme = "README.md"
keywords = [
  "ELT",
  "singer.io",
  "Transifex",
]
license = "Apache-2.0"
license-files = [ "LICENSE" ]
maintainers = [ { name = "Edgar Ramírez-Mondragón", email = "edgarrmondragon@hey.com" } ]
authors = [ { name = "Edgar Ramírez-Mondragón", email = "edgarrmondragon@hey.com" } ]
requires-python = ">=3.12"
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
]
dynamic = [
  "version",
]
dependencies = [
  "singer-sdk~=0.50.1",
]
urls.Documentation = "https://github.com/reservoir-data/tap-transifex#readme"
urls.Homepage = "https://github.com/reservoir-data/tap-transifex"
urls.Repository = "https://github.com/reservoir-data/tap-transifex"
scripts."tap-transifex" = "tap_transifex.tap:TapTransifex.cli"

[dependency-groups]
dev = [
  { include-group = "testing" },
  { include-group = "typing" },
]
testing = [
  "deptry>=0.12",
  "pytest>=8",
  "singer-sdk[testing]",
]
typing = [
  "mypy>=1.8",
  "ty>=0.0.1a16",
  "types-requests>=2.31",
]

[tool.hatch.version]
source = "vcs"

[tool.ruff]
line-length = 88

lint.select = [ "ALL" ]
lint.ignore = [
  "COM812", # missing-trailing-comma
  "DJ",     # flake8-django
  "FIX002", # line-contains-todo
  "ISC001", # single-line-implicit-string-concatenation
  "PD",     # pandas-vet
]
lint.per-file-ignores."tests/*" = [
  "ANN201", # missing-return-type-public-function
  "S101",   # assert
  "SLF001", # private-member-access
]
lint.unfixable = [
  "ERA001", # commented-out-code
]
lint.flake8-annotations.allow-star-arg-any = true
lint.isort.known-first-party = [ "tap_transifex" ]
lint.isort.required-imports = [ "from __future__ import annotations" ]
lint.pydocstyle.convention = "google"

[tool.deptry.package_module_name_map]
mypy = "mypy"
pytest = "pytest"
ty = "ty"
types-requests = "requests"

[tool.deptry.per_rule_ignores]
DEP002 = [
  "deptry",
  "mypy",
  "pytest",
]

[tool.pyproject-fmt]
max_supported_python = "3.14"

[tool.pytest.ini_options]
addopts = "-vvv"

[tool.tox]
min_version = "4.22"
requires = [
  "tox>=4.22",
  "tox-gh>=1.5.0",
  "tox-uv>=1.17",
]
env_list = [
  "dependencies",
  "typing",
  "3.14",
  "3.13",
  "3.12",
]

[tool.tox.gh.python]
"3.14" = [ "3.14" ]
"3.13" = [ "3.13", "dependencies", "typing" ]
"3.12" = [ "3.12" ]

[tool.tox.env_run_base]
pass_env = [ "TAP_TRANSIFEX_*" ]
dependency_groups = [ "testing" ]
commands = [ [ "pytest", { replace = "posargs", default = [ "tests" ], extend = true } ] ]

[tool.tox.env.dependencies]
dependency_groups = [ "testing" ]
commands = [ [ "deptry", "." ] ]

[tool.tox.env.sync]
commands = [ [ "tap-transifex", { replace = "posargs", default = [ "--config=ENV" ], extend = true } ] ]

[tool.tox.env.typing]
dependency_groups = [ "testing", "typing" ]
commands = [
  [ "mypy", "--strict", { replace = "posargs", default = [ "tap_transifex", "tests" ], extend = true } ],
  [ "ty", "check", { replace = "posargs", default = [ "tap_transifex", "tests" ], extend = true } ],
]

[tool.mypy]
warn_redundant_casts = true
warn_return_any = true
warn_no_return = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.uv]
required-version = ">=0.5.19"
